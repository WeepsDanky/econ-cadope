{"version":3,"sources":["theme/index.ts","components/Layout.tsx","components/Identicon.tsx","components/ConnectButton.tsx","components/AccountModal.tsx","contracts/index.ts","hooks/index.ts","components/Count.tsx","App.tsx","index.tsx"],"names":["extendTheme","fonts","heading","body","Layout","children","flexDirection","alignItems","justifyContent","h","bg","StyledIdenticon","styled","div","Identicon","ref","useRef","account","useEthers","useEffect","current","innerHTML","appendChild","Jazzicon","parseInt","slice","ConnectButton","handleOpenModal","activateBrowserWallet","etherBalance","useEtherBalance","display","background","borderRadius","py","px","color","fontSize","parseFloat","formatEther","toFixed","onClick","border","_hover","borderStyle","borderColor","backgroundColor","m","height","fontWeight","mr","length","_active","AccountModal","isOpen","onClose","deactivate","isCentered","size","pt","pb","mb","variant","textDecoration","mt","lineHeight","ml","alignContent","Copy","href","isExternal","ExternalLink","borderBottomLeftRadius","borderBottomRightRadius","p","textAlign","simpleContractAddress","simpleContractInterface","ethers","utils","Interface","simpleContractAbi","contract","Contract","useContractMethod","methodName","useContractFunction","state","send","Count","count","useContractCall","abi","address","method","args","console","log","useCount","incrementCount","setTwoVariables","useState","input","setInput","direction","align","toNumber","colorScheme","min","value","onChange","valueAsString","valueAsNumber","clampValueOnBlur","isFullWidth","_count","parseEther","App","useDisclosure","onOpen","theme","ReactDOM","render","StrictMode","DAppProvider","config","document","getElementById"],"mappings":"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","file":"static/js/main.8a947fb5.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\";\r\n\r\nexport default extendTheme({\r\n  fonts: {\r\n    heading: \"Inter\",\r\n    body: \"Inter\",\r\n  },\r\n});\r\n","import { ReactNode } from \"react\";\r\nimport { Flex } from \"@chakra-ui/react\";\r\n\r\ntype Props = {\r\n  children?: ReactNode;\r\n};\r\n\r\nexport default function Layout({ children }: Props) {\r\n  return (\r\n    <Flex\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      h=\"100vh\"\r\n      bg=\"gray.800\"\r\n    >\r\n      {children}\r\n    </Flex>\r\n  );\r\n}\r\n","import { useEffect, useRef } from \"react\";\r\nimport { useEthers } from \"@usedapp/core\";\r\nimport Jazzicon from \"@metamask/jazzicon\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst StyledIdenticon = styled.div`\r\n  height: 1rem;\r\n  width: 1rem;\r\n  border-radius: 1.125rem;\r\n  background-color: black;\r\n`;\r\n\r\nexport default function Identicon() {\r\n  const ref = useRef<HTMLDivElement>();\r\n  const { account } = useEthers();\r\n\r\n  useEffect(() => {\r\n    if (account && ref.current) {\r\n      ref.current.innerHTML = \"\";\r\n      ref.current.appendChild(Jazzicon(16, parseInt(account.slice(2, 10), 16)));\r\n    }\r\n  }, [account]);\r\n\r\n  return <StyledIdenticon ref={ref as any} />;\r\n}\r\n","import { Button, Box, Text } from \"@chakra-ui/react\";\r\nimport { useEthers, useEtherBalance } from \"@usedapp/core\";\r\nimport { formatEther } from \"@ethersproject/units\";\r\nimport Identicon from \"./Identicon\";\r\n\r\ntype Props = {\r\n  handleOpenModal: any;\r\n};\r\n\r\nexport default function ConnectButton({ handleOpenModal }: Props) {\r\n  const { activateBrowserWallet, account } = useEthers();\r\n  const etherBalance = useEtherBalance(account);\r\n\r\n  function handleConnectWallet() {\r\n    activateBrowserWallet();\r\n  }\r\n\r\n  return account ? (\r\n    <Box\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      background=\"gray.700\"\r\n      borderRadius=\"xl\"\r\n      py=\"0\"\r\n    >\r\n      <Box px=\"3\">\r\n        <Text color=\"white\" fontSize=\"md\">\r\n          {etherBalance && parseFloat(formatEther(etherBalance)).toFixed(3)} ETH\r\n        </Text>\r\n      </Box>\r\n      <Button\r\n        onClick={handleOpenModal}\r\n        bg=\"gray.800\"\r\n        border=\"1px solid transparent\"\r\n        _hover={{\r\n          border: \"1px\",\r\n          borderStyle: \"solid\",\r\n          borderColor: \"blue.400\",\r\n          backgroundColor: \"gray.700\",\r\n        }}\r\n        borderRadius=\"xl\"\r\n        m=\"1px\"\r\n        px={3}\r\n        height=\"38px\"\r\n      >\r\n        <Text color=\"white\" fontSize=\"md\" fontWeight=\"medium\" mr=\"2\">\r\n          {account &&\r\n            `${account.slice(0, 6)}...${account.slice(\r\n              account.length - 4,\r\n              account.length\r\n            )}`}\r\n        </Text>\r\n        <Identicon />\r\n      </Button>\r\n    </Box>\r\n  ) : (\r\n    <Button\r\n      onClick={handleConnectWallet}\r\n      bg=\"blue.800\"\r\n      color=\"blue.300\"\r\n      fontSize=\"lg\"\r\n      fontWeight=\"medium\"\r\n      borderRadius=\"xl\"\r\n      border=\"1px solid transparent\"\r\n      _hover={{\r\n        borderColor: \"blue.700\",\r\n        color: \"blue.400\",\r\n      }}\r\n      _active={{\r\n        backgroundColor: \"blue.800\",\r\n        borderColor: \"blue.700\",\r\n      }}\r\n    >\r\n      Connect to a wallet\r\n    </Button>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  Link,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { ExternalLinkIcon, CopyIcon } from \"@chakra-ui/icons\";\r\nimport { useEthers } from \"@usedapp/core\";\r\nimport Identicon from \"./Identicon\";\r\n\r\ntype Props = {\r\n  isOpen: any;\r\n  onClose: any;\r\n};\r\n\r\nexport default function AccountModal({ isOpen, onClose }: Props) {\r\n  const { account, deactivate } = useEthers();\r\n\r\n  function handleDeactivateAccount() {\r\n    deactivate();\r\n    onClose();\r\n  }\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} isCentered size=\"md\">\r\n      <ModalOverlay />\r\n      <ModalContent\r\n        background=\"gray.900\"\r\n        border=\"1px\"\r\n        borderStyle=\"solid\"\r\n        borderColor=\"gray.700\"\r\n        borderRadius=\"3xl\"\r\n      >\r\n        <ModalHeader color=\"white\" px={4} fontSize=\"lg\" fontWeight=\"medium\">\r\n          Account\r\n        </ModalHeader>\r\n        <ModalCloseButton\r\n          color=\"white\"\r\n          fontSize=\"sm\"\r\n          _hover={{\r\n            color: \"whiteAlpha.700\",\r\n          }}\r\n        />\r\n        <ModalBody pt={0} px={4}>\r\n          <Box\r\n            borderRadius=\"3xl\"\r\n            border=\"1px\"\r\n            borderStyle=\"solid\"\r\n            borderColor=\"gray.600\"\r\n            px={5}\r\n            pt={4}\r\n            pb={2}\r\n            mb={3}\r\n          >\r\n            <Flex justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\r\n              <Text color=\"gray.400\" fontSize=\"sm\">\r\n                Connected with MetaMask\r\n              </Text>\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                borderColor=\"blue.800\"\r\n                borderRadius=\"3xl\"\r\n                color=\"blue.500\"\r\n                fontSize=\"13px\"\r\n                fontWeight=\"normal\"\r\n                px={2}\r\n                height=\"26px\"\r\n                _hover={{\r\n                  background: \"none\",\r\n                  borderColor: \"blue.300\",\r\n                  textDecoration: \"underline\",\r\n                }}\r\n                onClick={handleDeactivateAccount}\r\n              >\r\n                Change\r\n              </Button>\r\n            </Flex>\r\n            <Flex alignItems=\"center\" mt={2} mb={4} lineHeight={1}>\r\n              <Identicon />\r\n              <Text\r\n                color=\"white\"\r\n                fontSize=\"xl\"\r\n                fontWeight=\"semibold\"\r\n                ml=\"2\"\r\n                lineHeight=\"1.1\"\r\n              >\r\n                {account &&\r\n                  `${account.slice(0, 6)}...${account.slice(\r\n                    account.length - 4,\r\n                    account.length\r\n                  )}`}\r\n              </Text>\r\n            </Flex>\r\n            <Flex alignContent=\"center\" m={3}>\r\n              <Button\r\n                variant=\"link\"\r\n                color=\"gray.400\"\r\n                fontWeight=\"normal\"\r\n                fontSize=\"sm\"\r\n                _hover={{\r\n                  textDecoration: \"none\",\r\n                  color: \"whiteAlpha.800\",\r\n                }}\r\n              >\r\n                <CopyIcon mr={1} />\r\n                Copy Address\r\n              </Button>\r\n              <Link\r\n                fontSize=\"sm\"\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                href={`https://mumbai.polygonscan.com//address/${account}`}\r\n                isExternal\r\n                color=\"gray.400\"\r\n                ml={6}\r\n                _hover={{\r\n                  color: \"whiteAlpha.800\",\r\n                  textDecoration: \"underline\",\r\n                }}\r\n              >\r\n                <ExternalLinkIcon mr={1} />\r\n                View on Explorer\r\n              </Link>\r\n            </Flex>\r\n          </Box>\r\n        </ModalBody>\r\n\r\n        <ModalFooter\r\n          justifyContent=\"end\"\r\n          background=\"gray.700\"\r\n          borderBottomLeftRadius=\"3xl\"\r\n          borderBottomRightRadius=\"3xl\"\r\n          p={6}\r\n        >\r\n          <Text\r\n            color=\"white\"\r\n            textAlign=\"left\"\r\n            fontWeight=\"medium\"\r\n            fontSize=\"md\"\r\n          >\r\n            Your transactions willl appear here...\r\n          </Text>\r\n        </ModalFooter>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n}\r\n","export const simpleContractAddress = \"0x6bf534F30b7838071f573b5913b7071395173C98\"","import { ethers } from \"ethers\";\r\nimport { Contract } from \"@ethersproject/contracts\";\r\nimport { useContractCall, useContractFunction } from \"@usedapp/core\";\r\nimport simpleContractAbi from \"../abi/SimpleContract.json\";\r\nimport { simpleContractAddress } from \"../contracts\";\r\n\r\nconst simpleContractInterface = new ethers.utils.Interface(simpleContractAbi);\r\nconst contract = new Contract(simpleContractAddress, simpleContractInterface);\r\n\r\nexport function useCount() {\r\n  const [count]: any =\r\n    useContractCall({\r\n      abi: simpleContractInterface,\r\n      address: simpleContractAddress,\r\n      method: \"count\",\r\n      args: [],\r\n    }) ?? [];\r\n  console.log(count);\r\n  return count;\r\n}\r\n\r\nexport function useIncrement() {\r\n  const { state, send } = useContractFunction(contract, \"incrementCount\", {});\r\n  return { state, send };\r\n}\r\n\r\nexport function useSetCount() {\r\n  const { state, send } = useContractFunction(contract, \"setCount\", {});\r\n  return { state, send };\r\n}\r\n\r\nexport function useContractMethod(methodName: string) {\r\n  const { state, send } = useContractFunction(contract, methodName, {});\r\n  return { state, send };\r\n}","import { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Text,\r\n  Button,\r\n  NumberInput,\r\n  NumberInputField,\r\n} from \"@chakra-ui/react\";\r\nimport { useCount, useContractMethod } from \"../hooks\";\r\nimport { utils } from \"ethers\";\r\n\r\nexport default function Count() {\r\n  const count = useCount();\r\n  const { state, send: incrementCount } = useContractMethod(\"incrementCount\");\r\n  const { state: setCountState, send: setCount } =\r\n    useContractMethod(\"setCount\");\r\n  const { state: twoVariablesState, send: setTwoVariables } =\r\n    useContractMethod(\"takeTwoVariables\");\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  function handleIncrement() {\r\n    incrementCount();\r\n  }\r\n\r\n  function handleSetCount() {\r\n    const _count = parseInt(input);\r\n    if (_count) {\r\n      setCount(_count);\r\n    }\r\n  }\r\n\r\n  function handleTwoVariables() {\r\n    const _count = parseInt(input);\r\n    if (_count) {\r\n      setTwoVariables(_count, 2, {\r\n        value: utils.parseEther(\"0.05\"),\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleInput(valueAsString: string, valueAsNumber: number) {\r\n    setInput(valueAsString);\r\n  }\r\n\r\n  return (\r\n    <Flex direction=\"column\" align=\"center\" mt=\"4\">\r\n      <Text color=\"white\" fontSize=\"8xl\">\r\n        {count ? count.toNumber() : 0}\r\n      </Text>\r\n      <Button colorScheme=\"teal\" size=\"lg\" onClick={handleIncrement}>\r\n        Increment\r\n      </Button>\r\n      <Box mt={4}>\r\n        <NumberInput\r\n          mb={2}\r\n          min={1}\r\n          value={input}\r\n          onChange={handleInput}\r\n          color=\"white\"\r\n          clampValueOnBlur={false}\r\n        >\r\n          <NumberInputField />\r\n        </NumberInput>\r\n        <Button isFullWidth colorScheme=\"purple\" onClick={handleTwoVariables}>\r\n          Set Count\r\n        </Button>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}","import { ChakraProvider, useDisclosure } from \"@chakra-ui/react\";\r\nimport theme from \"./theme\";\r\nimport Layout from \"./components/Layout\";\r\nimport ConnectButton from \"./components/ConnectButton\";\r\nimport AccountModal from \"./components/AccountModal\";\r\nimport Count from \"./components/Count\";\r\nimport \"@fontsource/inter\";\r\n\r\nfunction App() {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  return (\r\n    <ChakraProvider theme={theme}>\r\n      <Layout>\r\n        <ConnectButton handleOpenModal={onOpen} />\r\n        <AccountModal isOpen={isOpen} onClose={onClose} />\r\n        <Count />\r\n      </Layout>\r\n    </ChakraProvider>\r\n  );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { DAppProvider } from \"@usedapp/core\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <DAppProvider config={{}}>\r\n      <App />\r\n    </DAppProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}